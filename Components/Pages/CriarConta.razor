@page "/cliente/registrar"
@inject HttpClient Http

<h3>Registo</h3>

<EditForm Model="cliente" OnValidSubmit="RegistrarCliente">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Nome Completo</label>
        <InputText @bind-Value="cliente.Nome" class="form-control" />
    </div>
    <div class="form-group">
        <label>Username</label>
        <InputText @bind-Value="cliente.Username" class="form-control" />
        <small>O username deve come√ßar com 'cl'</small>
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText @bind-Value="cliente.Senha" type="password" class="form-control" />
    </div>
    <div class="form-group">
        <label>Contacto</label>
        <InputText @bind-Value="cliente.Contacto" class="form-control" />
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="cliente.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label>NIF</label>
        <InputText @bind-Value="cliente.NIF" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Registar</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}

@code {
    private Cliente cliente = new Cliente();
    private string errorMessage;

    private async Task RegistrarCliente()
    {
        var response = await Http.PostAsJsonAsync("api/Cliente/Registrar", cliente);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/cliente/login");
        }
        else
        {
            errorMessage = "Erro ao registar.";
        }
    }
}
