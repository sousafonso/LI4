@page "/funcionario/consultar-encomenda"
@inject HttpClient Http

<h3>Consultar Encomenda</h3>

@if (encomendas != null)
{
    <ul>
        @foreach (var encomenda in encomendas)
        {
            <li>
                <p>Encomenda: @encomenda.Descricao</p>
                <p>Cliente: @encomenda.Cliente.Nome</p>
                <p>Estado: @encomenda.Estado</p>
                <button @onclick="() => IniciarProducao(encomenda.Id)">Iniciar Produção</button>
                <button @onclick="() => EnviarEncomenda(encomenda.Id)">Enviar Encomenda</button>
            </li>
        }
    </ul>
}
else
{
    <p>A carregar encomendas...</p>
}

@code {
    private List<Encomenda> encomendas;

    protected override async Task OnInitializedAsync()
    {
        encomendas = await Http.GetFromJsonAsync<List<Encomenda>>("api/Encomenda/ConsultarHistorico?clienteId=1");
    }

    private async Task IniciarProducao(int encomendaId)
    {
        var response = await Http.PostAsJsonAsync($"api/LinhaMontagem/IniciarProducao?encomendaId={encomendaId}", null);
        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Produção iniciada com sucesso!");
        }
        else
        {
            Console.WriteLine("Erro ao iniciar produção.");
        }
    }

    private async Task EnviarEncomenda(int encomendaId)
    {
        var response = await Http.PostAsJsonAsync($"api/Funcionario/EnviarEncomenda?encomendaId={encomendaId}", null);
        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Encomenda enviada com sucesso!");
        }
        else
        {
            Console.WriteLine("Erro ao enviar encomenda.");
        }
    }
}