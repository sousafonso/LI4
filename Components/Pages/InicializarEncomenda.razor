@page "/cliente/encomendar"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Encomendar Produtos</h3>

@if (produtos != null)
{
    <form>
        <ul class="list-group">
            @foreach (var produto in produtos)
            {
                <li class="list-group-item">
                    <p>Produto: @produto.Nome</p>
                    <p>Preço: @produto.Preco:C</p>
                    <p>Disponível: @produto.QuantidadeDisponivel</p>
                    <div>
                        <label>Quantidade:</label>
                        <InputNumber @bind-Value="produto.QuantidadeSelecionada" />
                    </div>
                </li>
            }
        </ul>
        <button class="btn btn-primary" @onclick="EfetuarEncomenda">Confirmar Encomenda</button>
    </form>
}
else
{
    <p>A carregar produtos...</p>
}

@code {
    private List<ProdutoViewModel> produtos;

    protected override async Task OnInitializedAsync()
    {
        produtos = await Http.GetFromJsonAsync<List<ProdutoViewModel>>("api/Produto");
    }

    private async Task EfetuarEncomenda()
    {
        var encomenda = new EncomendaViewModel
        {
            Produtos = produtos.Where(p => p.QuantidadeSelecionada > 0).ToList()
        };

        var response = await Http.PostAsJsonAsync("api/Cliente/EfetuarEncomenda", encomenda);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/cliente/historico");
        }
    }

    public class ProdutoViewModel
    {
        public int Id { get; set; }
        public string Nome { get; set; }
        public decimal Preco { get; set; }
        public int QuantidadeDisponivel { get; set; }
        public int QuantidadeSelecionada { get; set; }
    }

    public class EncomendaViewModel
    {
        public List<ProdutoViewModel> Produtos { get; set; }
    }
}
