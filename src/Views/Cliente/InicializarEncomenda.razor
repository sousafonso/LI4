@page "/cliente/inicializar-encomenda"
@inject HttpClient Http

<h3>Inicializar Encomenda</h3>

@if (produtos != null)
{
    <EditForm OnValidSubmit="@InicializarEncomenda">
        @foreach (var produto in produtos)
        {
            <div>
                <h5>@produto.Nome</h5>
                <p>@produto.Descricao</p>
                <p>Preço: @produto.Preco €</p>
                <label>Quantidade: </label>
                <InputNumber @bind-Value="quantidades[produto.Id]" />
            </div>
        }
        <button type="submit">Adicionar à encomenda</button>
    </EditForm>
}
else
{
    <p>A carregar os produtos...</p>
}

@code {
    List<Produto> produtos;
    Dictionary<int, int> quantidades = new();

    protected override async Task OnInitializedAsync()
    {
        produtos = await Http.GetFromJsonAsync<List<Produto>>("api/Produto/ListarProdutos");
        foreach (var produto in produtos)
        {
            quantidades[produto.Id] = 0;
        }
    }

    private async Task InicializarEncomenda()
    {
        var response = await Http.PostAsJsonAsync("api/Encomenda/InicializarEncomenda", new
        {
            clienteId = 1, // Substituir pelo ID do cliente autenticado
            produtoIds = quantidades.Keys.ToList(),
            quantidades = quantidades.Values.ToList()
        });

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Encomenda inicializada com sucesso!");
        }
        else
        {
            Console.WriteLine("Erro ao inicializar encomenda.");
        }
    }
}
